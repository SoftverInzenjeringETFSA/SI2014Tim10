package com.tim10.glavna_knjiga.mappings;

// Generated May 24, 2015 3:19:06 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StavkeNaloga generated by hbm2java
 */
@Entity
@Table(name = "StavkeNaloga", catalog = "Tim10")
public class StavkeNaloga implements java.io.Serializable {

	private int id;
	private Nalozi nalozi;
	private Klijent klijent;
	private Dokumenti dokumenti;
	private KontniOkvir kontniOkvir;
	private String naziv;
	private Date datumKreiranja;
	private BigDecimal duguje;
	private BigDecimal potrazuje;

	public StavkeNaloga() {
	}
        
        public StavkeNaloga(Nalozi nalog) {
            this.nalozi = nalog;
            this.datumKreiranja = new Date();
	}

	public StavkeNaloga(int id, Nalozi nalozi, Klijent klijent,
			Dokumenti dokumenti, KontniOkvir kontniOkvir) {
		this.id = id;
		this.nalozi = nalozi;
		this.klijent = klijent;
		this.dokumenti = dokumenti;
		this.kontniOkvir = kontniOkvir;
	}

	public StavkeNaloga(int id, Nalozi nalozi, Klijent klijent,
			Dokumenti dokumenti, KontniOkvir kontniOkvir, String naziv,
			Date datumKreiranja, BigDecimal duguje, BigDecimal potrazuje) {
		this.id = id;
		this.nalozi = nalozi;
		this.klijent = klijent;
		this.dokumenti = dokumenti;
		this.kontniOkvir = kontniOkvir;
		this.naziv = naziv;
		this.datumKreiranja = datumKreiranja;
		this.duguje = duguje;
		this.potrazuje = potrazuje;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Nalozi_Id", nullable = false)
	public Nalozi getNalozi() {
		return this.nalozi;
	}

	public void setNalozi(Nalozi nalozi) {
		this.nalozi = nalozi;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Klijent_Id", nullable = false)
	public Klijent getKlijent() {
		return this.klijent;
	}

	public void setKlijent(Klijent klijent) {
		this.klijent = klijent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "Dokumenti_Id", referencedColumnName = "Id", nullable = false),
			@JoinColumn(name = "Dokumenti_VrstaDokumenta_Id", referencedColumnName = "VrstaDokumenta_Id", nullable = false) })
	public Dokumenti getDokumenti() {
		return this.dokumenti;
	}

	public void setDokumenti(Dokumenti dokumenti) {
		this.dokumenti = dokumenti;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "KontniOkvir_Id", nullable = false)
	public KontniOkvir getKontniOkvir() {
		return this.kontniOkvir;
	}

	public void setKontniOkvir(KontniOkvir kontniOkvir) {
		this.kontniOkvir = kontniOkvir;
	}

	@Column(name = "Naziv", length = 45)
	public String getNaziv() {
		return this.naziv;
	}

	public void setNaziv(String naziv) {
		this.naziv = naziv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DatumKreiranja", length = 0)
	public Date getDatumKreiranja() {
		return this.datumKreiranja;
	}

	public void setDatumKreiranja(Date datumKreiranja) {
		this.datumKreiranja = datumKreiranja;
	}

	@Column(name = "Duguje", precision = 18)
	public BigDecimal getDuguje() {
		return this.duguje;
	}

	public void setDuguje(BigDecimal duguje) {
		this.duguje = duguje;
	}

	@Column(name = "Potrazuje", precision = 18)
	public BigDecimal getPotrazuje() {
		return this.potrazuje;
	}

	public void setPotrazuje(BigDecimal potrazuje) {
		this.potrazuje = potrazuje;
	}

}
